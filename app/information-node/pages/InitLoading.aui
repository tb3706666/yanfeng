<ui>
    <img class="loadimg" src="./assets/imgs/loading.png">
</ui>


<script>
    import Alert from '@auicomp/alert/Alert.aui';
    import fetch from '@comm/utils/nfetch';
    import {router} from '@auicomp/action/Action.aui';
    import tool from '@comm/utils/tool';
    import config from '@libs/config';
    import Toast from '@auicomp/toast/Toast.aui';
    
    export default class InitLoading {
        static get tag() {
            return 'initloading';
        }

        created() {
            let self = this;
            let username = "axu296";
            let password = "1";
            window.userInfo = {
                badge:82984,
                userName:'徐依迪',
                loginId:'axu296',
                password:'1'
            };
            self.login(username,password);return;
            //获取平台传参  
            fetch.plusready(function() {
                tool.closeModal();//监听Android返回键，强制关闭所有模态窗口
                appnest.config.getUserInfo({
                    success: function(r) {
                        appnest.contact.getMemberInfo({//从通讯录里查询员工工号
                            loginId:r.loginId ,
                            success:function(mi){
                                $.each(mi.userParams,function(i,e){
                                    if(e.key == "employee_id"){
                                       r.badge = e.value;
                                    }
                                });
                                // r.badge = 82984;
                                // r.userName = '徐依迪';
                                // r.loginId = 'axu296';
                                // r.password = '1';
                                // r.badge = 83022;
                                // r.userName = '王海伟';
                                // r.loginId = 'awan536';
                                // r.password = '1';
                                window.userInfo = r;//用户信息挂到window，方便后面页面引用
                                let username = r.loginId;
                                let password = r.password;
                                self.login(username,password);
                            },
                            fail:function(mi){
                                Alert.show({
                                    content: mi.errMsg,
                                    doOk: function(){
                                        appnest.navigation.closeWindow();
                                    }
                                });
                            }
                        });
                        
                    },
                    fail: function(r) {
                        Alert.show({
                            content: '获取用户信息失败',
                            doOk: function(){
                                appnest.navigation.closeWindow();
                            }
                        })
                    }
                });
            });
        }
        login(username,password){
            let self= this;
            window.hasLogin = false;//添加登陆成功标志
            let lan = localStorage.getItem("lan");
            if(lan == null){//设置默认语言
                lan = 'ch';
                localStorage.setItem("lan",lan);
            }
            localStorage.setItem("username", username);
            localStorage.setItem("password", password);
            fetch({
                url : '/ek',
                data: {
                    username: username,
                    password:password,
                    lan: lan,
                },
                hideLoading:true,
                success: function(Data){
                    console.log(Data);
                    if (Data.oa_status == "fail") {
                        Toast.show('用户名或密码错误', function(){
                            console.log('Toast Close');
                           appnest.navigation.closeWindow();
                        });
                    
                    }else{
                        window.hasLogin = true;//添加登陆成功标志
                        self.getCookie();
                    }
                },
                error: function(rs){
                    appnest.navigation.closeWindow();
                }
            }) 
        }
        getCookie(){
            fetch({
                url: '/getcookie',
                method:'get',
                hideLoading: true,
                success: function(data) {
                    if(window.appnest){
                        data.cookie.split(';').forEach(item=>{
                            console.log(item.split('=')[0].trim()+"<<>>"+item.split('=')[1]);
                                appnest.http.setCookie({
                                    url:config.domain,
                                    cookie:{
                                    name:item.split('=')[0].trim(),
                                    value:item.split('=')[1],
                                    expiresAt: (new Date()).getTime() + 24*60*60*1000,
                                    }
                                });
                        });
                        console.log('设置cookie成功')
                    }
                    
                    router.go('/detail',true)
                },
                error: function(rs) {
                    appnest.navigation.closeWindow();
                }
            }) 
        }
    }
</script>

<style>
    .loadimg {
        width: 100%;
        height: 100%;
    }
</style>